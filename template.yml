AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudFormation Template to create 
  a CICD pipeline on AWS using AWS Dev Tools
  #Parameters:
Resources:
  # --- IAM ---
  # CodeDeploy Role 
  MyCodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codedeploy.amazonaws.com
        Version: '2012-10-17'
      Path: "/"
  # CodeBuild Role 
  MyCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: "/"
      Policies:
      - PolicyName: CFNStreamCodeBuildAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - cloudwatch:*
            - logs:*
            - s3:CreateBucket
            - s3:GetObject
            - s3:List*
            - s3:PutObject
            Effect: Allow
            Resource: "*"
  # CodePipeline Service Role
  MyCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: "/"
      Policies:
      - PolicyName: CFNStreamCodePipelineAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              Resource: "*"
              Effect: Allow
            - Action:
              - s3:PutObject
              Resource:
              - arn:aws:s3:::codepipeline*
              - arn:aws:s3:::elasticbeanstalk*
              Effect: Allow
            - Action:
              - codecommit:CancelUploadArchive
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
              Resource: "*"
              Effect: Allow
            - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
              Resource: "*"
              Effect: Allow
            - Action:
              - elasticbeanstalk:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
              - iam:PassRole
              Resource: "*"
              Effect: Allow
            - Action:
              - lambda:InvokeFunction
              - lambda:ListFunctions
              Resource: "*"
              Effect: Allow
            - Action:
              - opsworks:CreateDeployment
              - opsworks:DescribeApps
              - opsworks:DescribeCommands
              - opsworks:DescribeDeployments
              - opsworks:DescribeInstances
              - opsworks:DescribeStacks
              - opsworks:UpdateApp
              - opsworks:UpdateStack
              Resource: "*"
              Effect: Allow
            - Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
              - iam:PassRole
              Resource: "*"
              Effect: Allow
            - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              Resource: "*"
              Effect: Allow
            - Effect: Allow
              Action:
              - devicefarm:ListProjects
              - devicefarm:ListDevicePools
              - devicefarm:GetRun
              - devicefarm:GetUpload
              - devicefarm:CreateUpload
              - devicefarm:ScheduleRun
              Resource: "*"
  # --- MISC ---
  # Artifact Bucket
  ArtifactS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: dmeszaro-cfn-stream-artfactbucket

  # --- PIPELINE ---
  # Source
  MyCodeCommitRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: CFNStreamRepo
      RepositoryDescription: This repo was created on a live stream via CFN
  # Build
  MyCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: MyCFNStreamProject
      ServiceRole: !Ref MyCodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
      Source:
        Type: CODEPIPELINE
  # Deploy
  ## CodeDeploy Application
  MyCodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: cfnStreamLambdaApp
      ComputePlatform: Lambda
  ## CodeDeploy Deployment Group
  MyCodeDeploymentGroup: 
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties: 
      ApplicationName: 
        Ref: MyCodeDeployApplication
      DeploymentConfigName: CodeDeployDefault.LambdaCanary10Percent5Minutes
      DeploymentStyle:
        DeploymentType: BLUE_GREEN
        DeploymentOption: WITH_TRAFFIC_CONTROL
      ServiceRoleArn: 
        Fn::GetAtt: [ MyCodeDeployRole, Arn ]
  # Pipeline
  AppPipeline: 
    Type: AWS::CodePipeline::Pipeline 
    Properties: 
      RoleArn: !GetAtt MyCodePipelineRole.Arn
      Stages: 
        - 
          Name: Source 
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source 
                Owner: AWS 
                Version: '1'
                Provider: CodeCommit 
              OutputArtifacts: 
                - 
                  Name: SourceOutput 
              Configuration: 
                RepositoryName: !GetAtt MyCodeCommitRepo.Name
                BranchName: main
                PollForSourceChanges: 'false'
              RunOrder: 1 
        - 
          Name: Build 
          Actions: 
            - 
              Name: BuildAction 
              InputArtifacts: 
                -
                  Name: SourceOutput 
              ActionTypeId: 
                Category: Build 
                Owner: AWS 
                Version: '1'
                Provider: CodeBuild
              Configuration: 
                ProjectName: !Ref MyCodeBuildProject
              OutputArtifacts:
                - Name: MyCodeBuildArtifact
              RunOrder: 1 
        - 
          Name: Deploy 
          Actions: 
            - 
              Name: DeployAction
              InputArtifacts: 
                - 
                  Name: MyCodeBuildArtifact 
              ActionTypeId: 
                Category: Deploy 
                Owner: AWS 
                Version: '1'
                Provider: CodeDeploy 
              Configuration: 
                ApplicationName: 
                  Ref: MyCodeDeployApplication
                DeploymentGroupName: 
                  Ref: MyCodeDeploymentGroup
              RunOrder: 1 
      ArtifactStore: 
        Type: S3 
        Location:
          Ref: ArtifactS3Bucket
